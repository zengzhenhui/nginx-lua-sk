#引入lua脚本
init_by_lua_block {
    util = require "util"
}
server {
    server_name demo.domain.com;
    listen 443 ssl;
    ssl_certificate      /etc/nginx/conf/sslkey/demo.crt;
    ssl_certificate_key  /etc/nginx/conf/sslkey/demo.key;
    ssl_session_cache    shared:SSL:10m;
    ssl_session_timeout  10m;
    ssl_protocols        TLSv1 TLSv1.1 TLSv1.2;# SSLv2 SSLv3;
    ssl_ciphers          ALL:!ADH:!EXPORT56:RC4+RSA:+PKCS12:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP;
    ssl_prefer_server_ciphers on;

    access_log  /var/log/nginx/demo.ssl.a.log json;
    error_log   /var/log/nginx/demo.ssl.e.log notice;

    set $response_body "";
    set $req_body "";

    #过滤掉一些中间代理的IP(如百度高防IP)，以获取客户端真实ip
    real_ip_header X-Forwarded-For;
    set_real_ip_from 100.100.100.0/24;

    real_ip_recursive on;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-for $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    add_header X-Cache $upstream_cache_status;

    proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
    proxy_max_temp_file_size 0;
    proxy_connect_timeout 180;
    proxy_send_timeout 180;
    proxy_read_timeout 180;
    proxy_buffer_size 4k;
    proxy_buffers 4 32k;
    proxy_busy_buffers_size 64k;
    proxy_temp_file_write_size 64k;

    lua_need_request_body on;
    body_filter_by_lua '
        util.body_filter()
    ';

    log_by_lua_block {
        util.log()
    }
    #根据请求uri路径转发到不同地址
    location /v1/test{
        proxy_pass http://192.168.2.3:8088;
    }

    location / {
        #通过请求URL参数,转发到不同的地址。下面示例判断appid参数值，来分配转发地址。
        if ( $query_string ~ ^(.*)appid=ABCDEF-F26F-42B8-988C-27F4AEE3292A\b(.*)$ ) {
            proxy_pass http://192.168.1.1:8080;
        }
        if ( $query_string ~ ^(.*)appid=HIJKLMN-5F89-4E17-BC44-7A0DB101B245\b(.*)$ ) {
            proxy_pass http://192.168.1.2:8080;
        }
        #默认集群
        proxy_pass http://192.168.1.3:8080;
    }
}

